LoadModule auth_openidc_module modules/mod_auth_openidc.so

# -----------------------------------
# Configuration du module OIDC
# -----------------------------------
<IfModule auth_openidc_module>

    OIDCCookieHTTPOnly Off

    # URL de découverte OpenID Connect (metadata) => ex: Keycloak
    # Remplace <KEYCLOAK_HOST> et <REALM> selon ton setup
    OIDCProviderMetadataURL ${OIDC_PROVIDER}${OIDC_REALM}/.well-known/openid-configuration
    OIDCProviderIssuer ${OIDC_PROVIDER}${OIDC_REALM}
    OIDCProviderAuthorizationEndpoint ${OIDC_PROVIDER}${OIDC_REALM}/protocol/openid-connect/auth
    OIDCProviderJwksUri ${OIDC_PROVIDER}${OIDC_REALM}/protocol/openid-connect/certs
    OIDCProviderTokenEndpoint ${OIDC_PROVIDER}${OIDC_REALM}/protocol/openid-connect/token
    OIDCProviderUserInfoEndpoint ${OIDC_PROVIDER}${OIDC_REALM}/protocol/openid-connect/userinfo
    OIDCSSLValidateServer Off
    # L'URI vers laquelle Keycloak redirige après login
    # Elle doit matcher une "Valid redirect URI" dans la config de ton client Keycloak
    OIDCRedirectURI http://${SERVER_NAME}/redirect_uri
    # URL par défaut si aucune target_link_uri n'est fournie lors du SSO
    OIDCDefaultURL http://${SERVER_NAME}/
    # Clé secrète pour chiffrer les cookies (n'importe quelle phrase longue)
    OIDCCryptoPassphrase ${OIDC_CRYPT}
    # L'ID client configuré dans Keycloak
    OIDCClientID ${OIDC_CLIENT}
    # Le secret configuré dans Keycloak
    OIDCClientSecret ${OIDC_SECRET}
    OIDCRemoteUserClaim preferred_username
    OIDCInfoHook userinfo

    # Scopes qu'on veut demander
    OIDCScope "openid profile email"

    # Si on veut forcer le HTTPS sur la redirection
    # (à activer si tu es en HTTPS, sinon, en dev, tu peux rester en HTTP)
    # OIDCRequireSSL on

    # Où stocker les sessions (cookies, DB, memcache, Redis...), ici juste en cookies
    OIDCSessionType "server-cache"
</IfModule>

# -----------------------------------
# Configuration des VirtualHosts
# -----------------------------------
<VirtualHost *:80>
    ServerName app.finzen.local
    ProxyPreserveHost On

    ProxyPass "/" "http://app.finzen.local:4200/"
    ProxyPassReverse "/" "http://app.finzen.local:4200/"

    # DocumentRoot si tu sers une appli statique (Angular build)
    DocumentRoot "/usr/local/apache2/htdocs"

    # Forcer l'authentification sur toutes les pages
    <Location />
        AuthType openid-connect
        Require valid-user
    </Location>

     # Exclure certains endpoints de l'auth
     <Location /public>
         Require all granted
     </Location>

    ErrorLog /usr/local/apache2/logs/error.log
    CustomLog /usr/local/apache2/logs/access.log combined
</VirtualHost>